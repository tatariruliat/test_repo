##1   Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
# 1.Строится восьмибитная двоичная запись числа N.
# 2.Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3.Полученное число переводится в десятичную запись.
# 4.Из исходного числа вычитается полученное, разность выводится на экран.
# Пример. Дано число N = 131. Алгоритм работает следующим образом:
# 1.Восьмибитная двоичная запись числа N: 10000011.
# 2.Все цифры заменяются на противоположные, новая запись: 01111100.
# 3.Десятичное значение полученного числа: 124.
# 4.На экран выводится число: 131 – 124 = 7.
# Какое число нужно ввести в автомат, чтобы в результате получилось 185?

for n in range(128, 256):
    s = bin(n)[2:]  # перевод в двоичную систему
    s = str(s)
    s = s.replace('1', '*')
    s = s.replace('0', '1')
    s = s.replace('*', '0')
    r = int(s, 2)  # перевод в десятичную систему
    if n - r == 185:
        print(n)


##2   На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
# 1)Строится двоичная запись числа N.
# 2)К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи числа N, и остаток от деления суммы на 2 дописывается в конец числа
# (справа). Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы её цифр на 2.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
# является двоичной записью искомого числа R.
# Укажите минимальное число R, которое превышает число 83 и может являться результатом работы данного алгоритма.
# В ответе это число запишите в десятичной системе счисления.

def f(s):
    summa = 0
    for i in range(len(s)):
        summa += int(s[i])
    return summa
for n in range(1, 100):
    s = bin(n)[2:]  # перевод в двоичную систему
    s = str(s)
    summa = f(s)
    s = s + str(summa % 2)
    summa = f(s)
    s = s + str(summa % 2)
    r = int(s, 2)  # перевод в десятичную систему
    if r > 83:
        print(r)
        break


##3  На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число следующим образом.
# 1.Строится двоичная запись числа N.
# 2.К этой записи дописываются справа ещё два разряда по следующему правилу: если N чётное, в конец числа (справа)
# дописываются два нуля, в противном случае справа дописываются две единицы. Например, двоичная запись
# 1001 числа 9 будет преобразована в 100111.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
# является двоичной записью числа – результата работы данного алгоритма.
# Укажите минимальное число N, для которого результат работы алгоритма будет больше 115. В ответе это число
# запишите в десятичной системе счисления.

for n in range(1, 100):
    s = bin(n)[2:]  # перевод в двоичную систему
    s = str(s)
    if n % 2 == 0:
        s += "00"
    else:
        s += "11"
    r = int(s, 2)  # перевод в десятичную систему
    if r > 115:
        print(n)
        break


##4  Автомат обрабатывает натуральное число N > 1 по следующему алгоритму.
# 1.Строится двоичная запись числа N.
# 2.Последняя цифра двоичной записи удаляется.
# 3.Если исходное число N было нечётным, в конец записи (справа) дописываются цифры 10, если чётным— 01.
# 4.Результат переводится в десятичную систему и выводится на экран.
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1.Двоичная запись числа N: 1101.
# 2.Удаляется последняя цифра, новая запись: 110.
# 3.Исходное число нечётно, дописываются цифры 10, новая запись: 11010.
# 4.На экран выводится число 26.
# Какое число нужно ввести в автомат, чтобы в результате получилось 2018?

for n in range(1, 100000):
    s = bin(n)[2:]
    s = str(s)
    s = s[:-1]
    if n % 2 != 0:
        s += '10'
    else:
        s += '01'
    r = int(s, 2)
    if r == 2018:
        print(n)


##5  Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
# 1.Строится восьмибитная двоичная запись числа N.
# 2.Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
# 3.Полученное число переводится в десятичную запись.
# 4.Из нового числа вычитается исходное, полученная разность выводится на экран.
# Пример. Дано число N = 13. Алгоритм работает следующим образом.
# 1.Восьмибитная двоичная запись числа N: 00001101.
# 2.Все цифры заменяются на противоположные, новая запись 11110010.
# 3.Десятичное значение полученного числа 242.
# 4.На экран выводится число 242 − 13 = 229.
# Какое число нужно ввести в автомат, чтобы в результате получилось 133?

for n in range(256):
    s = bin(n)[2:]  # перевод в двоичную систему
    s = str(s)
    if len(s) < 8:
        s = '0' * (8 - len(s)) + s
    s = s.replace('1', '*')
    s = s.replace('0', '1')
    s = s.replace('*', '0')
    s = int(s, 2)  # перевод в десятичную систему
#    if s - n == 133:
#        print(n)